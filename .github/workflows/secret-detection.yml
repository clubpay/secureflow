name: Secret Detection

on:
  workflow_dispatch:  # Allows manual trigger
  workflow_call:  # Allows this workflow to be reusable by other repositories
    inputs:
      SECRET_DETECTION_EXCLUDE_LIST:
        required: false
        type: string # space separated list of files/folders to exclude from scan
    secrets:
      GLOBAL_REPO_TOKEN:
        required: false
      DEFECTDOJO_TOKEN:
        required: false

jobs:
  secret-detection:
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout Repository
      uses: actions/checkout@v4
      with: #if the repo is public and GLOBAL_REPO_TOKEN is not present, we use the default token generated in the Github action to prevent errors
        token: ${{ secrets.GLOBAL_REPO_TOKEN || github.token }}
    
    # Step 2: Remove secret_detection_exclude_list
    - name: Remove specified files/directories in SECRET_DETECTION_EXCLUDE_LIST
      run: |
        for item in ${{ inputs.SECRET_DETECTION_EXCLUDE_LIST }}; do
          rm -rf $item
        done
        
    # Step 3: run the scan
    - name: Run Gitleaks Scan
      run: | # Set the working directory to /path to avoid adding any prefix to file paths in Defectdojo
       ls
       docker run -v ${PWD}:/path -w /path zricethezav/gitleaks:latest dir --exit-code 0 --report-path gitleaks-report.json .
    
    # Step 4: Fetching Binaries for Teleport
    - name: Fetch Teleport Binaries
      uses: teleport-actions/setup@v1
      with:
        version: 16.2.0
    
    # Step 5: Fetching Credentials
    - name: Fetch Credentials Using Machine ID
      id: auth
      uses: teleport-actions/auth-application@v2
      with:
        proxy: teleport.qlub.cloud:443
        token: defectdojo-github-action
        app: defectdojo
        anonymous-telemetry: 0

    # Step 6: Upload to Defectdojo Behind Teleport
    - name: Upload Gitleaks JSON Report to Defectdojo
      run: |
        TODAY=$(date +%Y-%m-%d)
        product_name=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
        curl --cert ${{ steps.auth.outputs.certificate-file }} --key ${{ steps.auth.outputs.key-file }} -X "POST" "https://defectdojo.teleport.qlub.cloud/api/v2/import-scan/" -H "accept: application/json" -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" -H "Content-Type: multipart/form-data" -F file=@gitleaks-report.json -F "product_type_name=Clubpay" -F "active=true" -F "verified=true" -F "close_old_findings=true" -F "engagement_name=${GITHUB_RUN_ID}(Secret-Detection)" -F "build_id=${GITHUB_RUN_ID}" -F "minimum_severity=Info" -F "close_old_findings_product_scope=true" -F "scan_date=$TODAY" -F "engagement_end_date=$TODAY" -F "commit_hash=${GITHUB_SHA}" -F "product_name=${product_name}" -F "auto_create_context=true" -F "scan_type=Gitleaks Scan" -F "branch_tag=${GITHUB_REF_NAME}" -F "source_code_management_uri=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
    
    # Step 7: Upload the Gitleaks report as an artifact
    - name: Upload Gitleaks Report to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gitleaks-report
        path: gitleaks-report.json
