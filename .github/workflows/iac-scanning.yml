name: Infrastructure as Code Scanning

on:
  workflow_dispatch:  # Allows manual trigger
  workflow_call:  # Allows this workflow to be reusable by other repositories

jobs:
  iac-scanning:
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout Repository
      uses: actions/checkout@v4

    # Step 2: run the scan
    - name: Run KICS Scan
      run: | # Set the working directory to /path to avoid adding any prefix to file paths in Defectdojo
        docker run -t -v "${PWD}":/path -w /path checkmarx/kics scan -p /path --exclude-severities info,low --disable-secrets --ignore-on-exit all --report-formats json -o . --output-name kics-report -t Ansible,AzureResourceManager,Buildah,CloudFormation,DockerCompose,Dockerfile,GRPC,GoogleDeploymentManager,Kubernetes,Terraform
    
    # Step 3: Fetching Binaries for Teleport
    - name: Fetch Teleport Binaries
      uses: teleport-actions/setup@v1
      with:
        version: 16.2.0
    
    # Step 4: Fetching Credentials
    - name: Fetch Credentials Using Machine ID
      id: auth
      uses: teleport-actions/auth-application@v2
      with:
        proxy: teleport.qlub.cloud:443
        token: defectdojo-github-action
        app: defectdojo
        anonymous-telemetry: 0
        
    # Step 5: Upload the KICS report to DefectDojo
    - name: Upload KICS JSON Report to Defectdojo
      run: |
        TODAY=$(date +%Y-%m-%d)
        product_name=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
        curl --cert ${{ steps.auth.outputs.certificate-file }} --key ${{ steps.auth.outputs.key-file }} -X "POST" "https://defectdojo.teleport.qlub.cloud/api/v2/import-scan/" -H "accept: application/json" -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" -H "Content-Type: multipart/form-data" -F file=@kics-report.json -F "product_type_name=Clubpay" -F "active=true" -F "verified=true" -F "close_old_findings=true" -F "engagement_name=${GITHUB_RUN_ID}(IaC-Scanning)" -F "build_id=${GITHUB_RUN_ID}" -F "minimum_severity=Info" -F "close_old_findings_product_scope=true" -F "scan_date=$TODAY" -F "engagement_end_date=$TODAY" -F "commit_hash=${GITHUB_SHA}" -F "product_name=${product_name}" -F "auto_create_context=true" -F "scan_type=KICS Scan" -F "branch_tag=${GITHUB_REF_NAME}" -F "source_code_management_uri=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
    
    # Step 6: Upload the KICS report as an artifact
    - name: Upload KICS Report to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: kics-report
        path: kics-report.json
