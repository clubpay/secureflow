name: Static Application Security Testing

on:
  workflow_dispatch:  # This allows manual trigger
  workflow_call:  # Allows this workflow to be reusable by other repositories
      inputs:
        sast_exclude_list:
          required: false
          type: string # space separated list of files/folders to exclude from scan

jobs:
  sast:
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GH_TOKEN || github.token }}
      
    # Step 2: Remove sast_exclude_list
    - name: Remove specified files/directories in sast_exclude_list
      run: |
        for item in ${{ inputs.sast_exclude_list }}; do
          rm -rf $item
        done
        
    # Step 3: Run Semgrep scan on all files and output to a JSON file
    - name: Run Semgrep Scan
      run: |
        docker run --rm -v "${PWD}:/src" semgrep/semgrep semgrep ci --metrics=off --exclude=*.yml --exclude=*.yaml --exclude=*.json --exclude=*docker* --exclude=*Docker* --config=p/mobsfscan --config=p/nodejsscan --config=p/owasp-top-ten --config=p/cwe-top-25 --config=p/security-audit --config=p/default --gitlab-sast --output=semgrep-report.json || EXIT_CODE=$?
        if [ $EXIT_CODE -ne 0 ] && [ $EXIT_CODE -ne 1 ]; then exit $EXIT_CODE; fi
    
    # Step 4: Fetching Binaries for Teleport
    - name: Fetch Teleport Binaries
      uses: teleport-actions/setup@v1
      with:
        version: 16.2.0
    
    # Step 5: Fetching Credentials
    - name: Fetch Credentials Using Machine ID
      id: auth
      uses: teleport-actions/auth-application@v2
      with:
        proxy: teleport.qlub.cloud:443
        token: defectdojo-github-action
        app: defectdojo
        anonymous-telemetry: 0
    
    # Step 6: Upload to Defectdojo Behind Teleport
    - name: Upload Semgrep JSON Report to Defectdojo
      run: |
        TODAY=$(date +%Y-%m-%d)
        product_name=$(echo "${GITHUB_REPOSITORY}" | cut -d'/' -f2)
        curl --cert ${{ steps.auth.outputs.certificate-file }} --key ${{ steps.auth.outputs.key-file }} -X "POST" "https://defectdojo.teleport.qlub.cloud/api/v2/import-scan/" -H "accept: application/json" -H "Authorization: Token ${{ secrets.DEFECTDOJO_TOKEN }}" -H "Content-Type: multipart/form-data" -F file=@semgrep-report.json -F "product_type_name=Clubpay" -F "active=true" -F "verified=true" -F "close_old_findings=true" -F "engagement_name=${GITHUB_RUN_ID}(SAST)" -F "build_id=${GITHUB_RUN_ID}" -F "minimum_severity=Info" -F "close_old_findings_product_scope=true" -F "scan_date=$TODAY" -F "engagement_end_date=$TODAY" -F "commit_hash=${GITHUB_SHA}" -F "product_name=${product_name}" -F "auto_create_context=true" -F "scan_type=GitLab SAST Report" -F "branch_tag=${GITHUB_REF_NAME}" -F "source_code_management_uri=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
        
    # Step 7: Upload the Semgrep Report as an Artifact
    - name: Upload Semgrep Report to Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: semgrep-report
        path: semgrep-report.json
